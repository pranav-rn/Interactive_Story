{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pranav\\\\Downloads\\\\Sem 3\\\\Webtech project\\\\Interactive_Story\\\\Interactive_Story\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link, Navigate } from 'react-router-dom';\nimport StoryText from './StoryText';\nimport Signup from './Signup';\nimport Login from './Login';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentNode, setCurrentNode] = useState(null);\n  useEffect(() => {\n    if (isLoggedIn) {\n      fetchNode('start'); // Load the starting node when logged in\n    }\n  }, [isLoggedIn]);\n  const fetchNode = async nodeId => {\n    try {\n      const response = await fetch(`http://localhost:3001/story/${nodeId}`);\n      const data = await response.json();\n      setCurrentNode(data); // Update the state with the fetched data\n    } catch (error) {\n      console.error('Error fetching node:', error);\n    }\n  };\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: handleLoginSuccess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Interactive Story\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), currentNode ? /*#__PURE__*/_jsxDEV(StoryText, {\n          node: currentNode,\n          onChoose: fetchNode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EmbHS6xrFQN2TZzHPamkGjwHqTI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Link","Navigate","StoryText","Signup","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","currentNode","setCurrentNode","fetchNode","nodeId","response","fetch","data","json","error","console","handleLoginSuccess","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogin","node","onChoose","_c","$RefreshReg$"],"sources":["C:/Users/Pranav/Downloads/Sem 3/Webtech project/Interactive_Story/Interactive_Story/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Link, Navigate } from 'react-router-dom';\r\nimport StoryText from './StoryText';\r\nimport Signup from './Signup';\r\nimport Login from './Login';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [currentNode, setCurrentNode] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      fetchNode('start'); // Load the starting node when logged in\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const fetchNode = async (nodeId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/story/${nodeId}`);\r\n      const data = await response.json();\r\n      setCurrentNode(data); // Update the state with the fetched data\r\n    } catch (error) {\r\n      console.error('Error fetching node:', error);\r\n    }\r\n  };\r\n\r\n  const handleLoginSuccess = () => {\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        {!isLoggedIn ? (\r\n          <>\r\n            <nav>\r\n              <Link to=\"/signup\">Signup</Link>\r\n              <Link to=\"/login\">Login</Link>\r\n            </nav>\r\n            <Routes>\r\n              <Route path=\"/signup\" element={<Signup />} />\r\n              <Route path=\"/login\" element={<Login onLogin={handleLoginSuccess} />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n            </Routes>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h1>Interactive Story</h1>\r\n            {currentNode ? (\r\n              <StoryText node={currentNode} onChoose={fetchNode} />\r\n            ) : (\r\n              <div>Loading...</div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}